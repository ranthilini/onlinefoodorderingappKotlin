// Generated by view binder compiler. Do not edit!
package com.example.madlabexam2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.madlabexam2.R;
import com.google.android.material.bottomappbar.BottomAppBar;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BottomAppBar bottomAppBar;

  @NonNull
  public final BottomNavigationView bottomNavigationView;

  @NonNull
  public final Button buttonhelp;

  @NonNull
  public final Button buttonlanfeedback;

  @NonNull
  public final Button buttonlanguage;

  @NonNull
  public final Button buttonlogout;

  @NonNull
  public final CoordinatorLayout checkoutbtn;

  @NonNull
  public final TextView gender1;

  @NonNull
  public final TextView help;

  @NonNull
  public final TextView textView7;

  @NonNull
  public final TextView textViewpw;

  @NonNull
  public final TextView txtmobile;

  @NonNull
  public final View view;

  @NonNull
  public final View view5;

  private ActivitySettingsBinding(@NonNull ConstraintLayout rootView,
      @NonNull BottomAppBar bottomAppBar, @NonNull BottomNavigationView bottomNavigationView,
      @NonNull Button buttonhelp, @NonNull Button buttonlanfeedback, @NonNull Button buttonlanguage,
      @NonNull Button buttonlogout, @NonNull CoordinatorLayout checkoutbtn,
      @NonNull TextView gender1, @NonNull TextView help, @NonNull TextView textView7,
      @NonNull TextView textViewpw, @NonNull TextView txtmobile, @NonNull View view,
      @NonNull View view5) {
    this.rootView = rootView;
    this.bottomAppBar = bottomAppBar;
    this.bottomNavigationView = bottomNavigationView;
    this.buttonhelp = buttonhelp;
    this.buttonlanfeedback = buttonlanfeedback;
    this.buttonlanguage = buttonlanguage;
    this.buttonlogout = buttonlogout;
    this.checkoutbtn = checkoutbtn;
    this.gender1 = gender1;
    this.help = help;
    this.textView7 = textView7;
    this.textViewpw = textViewpw;
    this.txtmobile = txtmobile;
    this.view = view;
    this.view5 = view5;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomAppBar;
      BottomAppBar bottomAppBar = ViewBindings.findChildViewById(rootView, id);
      if (bottomAppBar == null) {
        break missingId;
      }

      id = R.id.bottomNavigationView;
      BottomNavigationView bottomNavigationView = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigationView == null) {
        break missingId;
      }

      id = R.id.buttonhelp;
      Button buttonhelp = ViewBindings.findChildViewById(rootView, id);
      if (buttonhelp == null) {
        break missingId;
      }

      id = R.id.buttonlanfeedback;
      Button buttonlanfeedback = ViewBindings.findChildViewById(rootView, id);
      if (buttonlanfeedback == null) {
        break missingId;
      }

      id = R.id.buttonlanguage;
      Button buttonlanguage = ViewBindings.findChildViewById(rootView, id);
      if (buttonlanguage == null) {
        break missingId;
      }

      id = R.id.buttonlogout;
      Button buttonlogout = ViewBindings.findChildViewById(rootView, id);
      if (buttonlogout == null) {
        break missingId;
      }

      id = R.id.checkoutbtn;
      CoordinatorLayout checkoutbtn = ViewBindings.findChildViewById(rootView, id);
      if (checkoutbtn == null) {
        break missingId;
      }

      id = R.id.gender1;
      TextView gender1 = ViewBindings.findChildViewById(rootView, id);
      if (gender1 == null) {
        break missingId;
      }

      id = R.id.help;
      TextView help = ViewBindings.findChildViewById(rootView, id);
      if (help == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = ViewBindings.findChildViewById(rootView, id);
      if (textView7 == null) {
        break missingId;
      }

      id = R.id.textViewpw;
      TextView textViewpw = ViewBindings.findChildViewById(rootView, id);
      if (textViewpw == null) {
        break missingId;
      }

      id = R.id.txtmobile;
      TextView txtmobile = ViewBindings.findChildViewById(rootView, id);
      if (txtmobile == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      id = R.id.view5;
      View view5 = ViewBindings.findChildViewById(rootView, id);
      if (view5 == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((ConstraintLayout) rootView, bottomAppBar,
          bottomNavigationView, buttonhelp, buttonlanfeedback, buttonlanguage, buttonlogout,
          checkoutbtn, gender1, help, textView7, textViewpw, txtmobile, view, view5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
